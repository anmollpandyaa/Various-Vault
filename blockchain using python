import time
import hashlib

class Block:
        
    def calculate_hash(self):
        block_string = f"{self.index}{self.data}{self.timestamp}"
        return hashlib.sha256(block_string.encode()).hexdigest()
        
    def __init__(self, data, index):
        self.data = data
        self.index = index
        self.timestamp = time.time()
        self.hshvalue = self.calculate_hash()
        
    def genesis(self):
        formatted_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(self.timestamp))
        return f"Index: {self.index}\nData: {self.data}\nTimestamp: {formatted_time}\nHash: {self.hshvalue}"

        
    def __str__(self):
        formatted_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(self.timestamp))
        return f"Index: {self.index}\nData: {self.data}\nTimestamp: {formatted_time}\nHash: {self.hshvalue}"
        
def create_block(data, index):
    return Block(data, index)
    
def create_genesis_block():
    return Block("Genesis Block", 0)

block = Block(10, 1)
blockk = create_block(20, 2)
genesis = create_genesis_block()
print(block)
print("----------------------------------------------------------------------")
print(blockk)
print("----------------------------------------------------------------------")
print(genesis)
